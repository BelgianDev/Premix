plugins {
    id 'java'
    id 'org.ajoberstar.grgit' version '5.2.1'
}

dependencies {

}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'eclipse'

    group = project.group

    eclipse {
        classpath {
            downloadSources = true
        }
    }

    idea {
        module {
            downloadSources = true
        }
    }

    compileJava {
        options.encoding = "UTF-8"
    }

    java {
        toolchain.languageVersion.set(JavaLanguageVersion.of(project.java_version))
    }

    repositories {
        mavenCentral()
        maven { url 'https://repository.atlasworld.fr/repository/maven-public/'}
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    publishing {
        boolean isSnapshot = System.getenv("RELEASE") != 'true';

        repositories {
            maven {
                name 'AtlasWorld-Repo'

                def release = "https://repository.atlasworld.fr/repository/maven-release/"
                def snapshot = "https://repository.atlasworld.fr/repository/maven-snapshot/"
                url = isSnapshot ? snapshot : release

                credentials {
                    username = System.getenv("AW_REPO_USERNAME")
                    password = System.getenv("AW_REPO_PASSWORD")
                }

                metadataSources {
                    gradleMetadata()
                }
            }
        }
        publications {
            Premix(MavenPublication) {
                from components.java

                group = "${project_group}"
                try {
                    version = isSnapshot ? grgit.head().id.subSequence(0, 5) : grgit.tag.list().get(0).getName();
                } catch (IndexOutOfBoundsException e) {
                    version = "undefined"
                }

                pom {
                    name = 'Premix'
                    description = 'Compile-time mixin library.'
                    licenses {
                        license {

                        }
                    }
                }
            }
        }
    }
}
